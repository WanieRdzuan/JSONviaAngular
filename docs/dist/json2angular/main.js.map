{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/fyp2019/fyp2019.component.css","webpack:///./src/app/fyp2019/fyp2019.component.html","webpack:///./src/app/fyp2019/fyp2019.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,iDAAiD,2eAA2e,aAAa,2BAA2B,gBAAgB,2BAA2B,gBAAgB,2BAA2B,aAAa,2BAA2B,eAAe,2BAA2B,gBAAgB,mE;;;;;;;;;;;;;;;;;;ACAltB;AACS;AAWnD;IACE,sBAAqB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;IAAG,CAAC;IAGhD,+BAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC,SAAS,CAClE,cAAI;YACF,KAAI,CAAC,SAAS,GAAG,IAAgB,CAAC,CAAG,4BAA4B;YACjE,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;QACtB,CAAC,EACT,UAAC,GAAsB;YACrB,OAAO,CAAC,GAAG,CAAE,GAAG,CAAC,OAAO,CAAC,CAAC;QACtB,CAAC,CACR,CAAC;IACJ,CAAC;IAdU,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAGkC,gEAAU;OADjC,YAAY,CAexB;IAAD,mBAAC;CAAA;AAfwB;;;;;;;;;;;;;;;;;;;;;;ACZiC;AACjB;AACM;AAEU;AACM;AAc/D;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,2EAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,sEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnBtB,+DAA+D,+I;;;;;;;;;;;ACA/D,mD;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IALU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAExC,CAAC;;OACW,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B;;;;;;;;;;;;;ACP7B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<div style=\\\"text-align:left;\\\">\\n<h1>Data From Firebase</h1>\\n\\n    <table *ngIf=\\\"parameter\\\" align=\\\"center\\\">\\n        <tr>\\n        <th>Time</th>\\n            <th>Tank A (cm)</th>\\n                <th>Tank B (cm)</th>\\n                            <th>Time</th>\\n                    <th>VSD-InFlow(Hz)</th>\\n                        <th>VSD-OutFlow(Hz)</th>\\n                                \\n        </tr>\\n        <!-- BIND ARRAY TO TABLE -->\\n        <tr *ngFor=\\\"let val of parameter\\\">   \\n                <td>{{val.TimeLvl}}</td>\\n              <td>{{val.LevelTankA}}</td>\\n              <td>{{val.LevelTankB}}</td>\\n              <td>{{val.TimeVSD}}</td>\\n              <td>{{val.VSDInFlow}}</td>\\n              <td>{{val.VSDOutFlow}}</td>\\n              \\n        </tr>\\n    </table>\\n</div>\\n\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/https';\nimport { HttpErrorResponse } from '@angular/common/https';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  constructor (private httpService: HttpClient) {}\n  parameter: string[];\n\n  ngOnInit () {\n    this.httpService.get('./assets/fyp2019-ff11e-export.json').subscribe(\n      data => {\n        this.parameter = data as string[];   // FILL THE ARRAY WITH DATA.\n        console.log(this.parameter);    \n              },\n      (err: HttpErrorResponse) => {\n        console.log (err.message);\n            }\n    );\n  }\n} ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/https';\nimport { FYP2019Component } from './fyp2019/fyp2019.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FYP2019Component\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Z5cDIwMTkvZnlwMjAxOS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<p><b>FYP2019 WORKS!</b></p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fyp2019',\n  templateUrl: './fyp2019.component.html',\n  styleUrls: ['./fyp2019.component.css']\n})\nexport class FYP2019Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}